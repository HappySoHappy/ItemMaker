plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'kr.entree.spigradle' version '2.4.6'
    id 'io.freefair.lombok' version '8.0.1'
    id 'nebula.release' version '17.2.1'
}

//apply from: "$rootDir/gradle/publish.gradle"

group project.property("group")

archivesBaseName = project.property("pluginName")
java.sourceCompatibility = 17
java.targetCompatibility = 17

spigot {
    main = project.property("pluginMain")
    name = project.property("pluginName")
    apiVersion = project.property("pluginApiVersion")
    load = STARTUP
    authors = [project.property("pluginAuthors")]
    depends = [ ]
    softDepends = [ ]
    loadBefore = [ ]
    //excludeLibraries = ['*']
}

// see https://github.com/spigradle/spigradle#repositories
repositories {
    mavenLocal()
    mavenCentral()
    //spigotmc()
    //bungeecord()
    //paper()
    //essentialsX()
    //bStats()
    //enginehub()
    //protocolLib()
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url 'https://repo.xenondevs.xyz/releases' }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.0.1'
    compileOnly group: 'org.yaml', name: 'snakeyaml', version: '2.0'
    compileOnly spigot(project.property("mcVersion"))

    // Inventory User Interface: https://github.com/NichtStudioCode/InvUI
    shadow "xyz.xenondevs.invui:invui:1.9"

    // Annotation Command Framework: https://github.com/aikar/commands
    shadow "co.aikar:acf-paper:0.5.1-SNAPSHOT"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.19:2.147.1'
}

shadowJar {
    // ignore warning
    archiveClassifier = ''
    configurations = [project.configurations.runtimeClasspath, project.configurations.shadow]
}

processResources {
    project.properties.put("version", version)
    expand project.properties
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    //options.fork = true
    //options.forkOptions.executable = 'javac'
}

defaultTasks 'build'
tasks.build.dependsOn(shadowJar)
//tasks.publish.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)
tasks.configSpigot.dependsOn() {
    def pluginName = project.property("pluginName")
    def deletedFiles = fileTree(dir: 'debug/spigot/plugins', include: "${pluginName}*.jar").files
    delete deletedFiles
    if (deletedFiles.size() >= 2) {
        println "Deleted "+deletedFiles.size()+" unused plugin jars"
    }
}

tasks.withType(Jar) {
    exclude 'acf-core_*.properties'
    exclude 'acf-minecraft_*.properties'
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    ignoreFailures = false
}